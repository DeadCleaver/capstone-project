- inserimento di giocatore che non corrisponde in perfezione all'utente già salvato nel DB // verifica doppioni, verifica esattezza dati giocatore rispetto a DB
- Gestire gestione errata add giocatori
√ protezione delle routes
√ Gestione della visualizzazione delle card: sessioni passate, sessioni disponibili, 
√ nascondi o segnala le sessioni full
√ Fare "not found"
- Mettere conferma a eliminazione sessioni // da inserire ovunque
- Anteprima immagini in modifica/aggiungi sessione
- Modifica profilo (a parte)
- Modifica password (patch della pass, verifica doppia password)
- Google Login
- Sistemare stile
- Aggiungere spinner di caricamento
- Sistemare errori
- emailsender per memo giocatori
- Problema degli user cancellati


COLOR PALETTE
Blueviolet - #9047ff
Blueviolet Scuro - #5b17c4
Black (antracite) - #212121 

Darkslategrey - #303338
Darkslategrey - #212529
Giansboro - #dee2e6

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

BASE

- Un utente può registrarsi
- Gli utenti registrati possono creare una sessione // aggiungere parametri orari sessione
- Utenti registrati e non possono iscriversi a una sessione dando propria email/username // come gestire gli utenti non registrati?

ALTRO
- Le sessioni passate sono nascoste (o cancellate?) || gestito front-end || gestire con un endpoint di sessioni ancora da avvenire
- Inserire un elenco DB di giochi, con descrizioni e cover già disponibili
SE VUOI ESAGERARE
- Inserire la possibilità di commentare la sessione (ma solo dopo che questa è avvenuta), oppure commentare/recensire il gioco
- Inserire la possibilità di inviare una mail a tutti gli utenti registrati quando viene creata una nuova sessione
- Condivisione del link della sessione

FINEZZE?
- Middleware di verifica


Tipi di DB:

User:
- nome
- cognome
- username
- mail
- data di nascita
• giochi giocati (Array)

Sessioni:
- Titolo
- Descrizione
- Giochi (collegato a giochi)
- Trigger Warning
- Giorno
- Ora
- Numero minimo di partecipanti
- Numero massimo di partecipanti


Giochi:
- Titolo
- Descrizione

Flow
- Utente registrato/loggato può creare una voce gioco, con titolo e descrizione. Questo va a popolare un archivio a cui si accede per creare le sessioni.
- Utente loggato crea una sessione, con i dati del modello, scegliendo il gioco da un menu collegato a un altro database


UTENTI GUEST 
- Nome, Cognome, Mail - Registrazione anche per i Guest
- Endpoint per chi si registra come guest e si iscrive // contemporaneo
- Endpoint per i guest

- Autenticazione / Login / Registrazione
- Per i guest non c'è Login e Autenticazione (nella sessione)
> verifica che mail esista già, se non esiste lo crea come se fosse un utente (per aggiungerlo alla sessione con l'id)

- Mettere un referencing ai giochi // senza creare routes

MIN/MAX giocatori
_ campoplayers.length = max > non puoi aggiunegre altri player || sia da middleware che da frontend ||

/* enpoint singolo con più funzioni */
// ENDPOINT per abbinare un utente alla sessione
// ENPOINT per abbinare un GUEST alla sessione (ref 55 del to-do)